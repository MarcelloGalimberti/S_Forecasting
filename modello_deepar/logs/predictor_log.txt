Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to '/Users/marcello_galimberti/Documents/Python Scripts/dart/modello_deepar'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.10.13
Operating System:   Darwin
Platform Machine:   arm64
Platform Version:   Darwin Kernel Version 24.0.0: Mon Aug 12 20:51:54 PDT 2024; root:xnu-11215.1.10~2/RELEASE_ARM64_T6000
CPU Count:          10
GPU Count:          0
Memory Avail:       27.17 GB / 64.00 GB (42.5%)
Disk Space Avail:   269.42 GB / 926.35 GB (29.1%)
===================================================
Setting presets to: best_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAE,
 'hyperparameters': {'DeepAR': {}},
 'known_covariates_names': [],
 'num_val_windows': 2,
 'prediction_length': 7,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Inferred time series frequency: 'MS'
Provided train_data has 363 rows, 3 time series. Median time series length is 121 (min=121, max=121). 

Provided data contains following columns:
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MAE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2024-10-01 21:09:34
Models that will be trained: ['DeepAR']
Training timeseries model DeepAR. Training for up to 600.0s of the 600.0s of remaining time.
	-141.0810     = Validation score (-MAE)
	268.55  s     = Training runtime
	0.19    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['DeepAR']
Total runtime: 268.76 s
Best model: DeepAR
Best model score: -141.0810
Model not specified in predict, will default to the model with the best validation score: DeepAR
